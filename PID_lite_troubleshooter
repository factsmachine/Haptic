#include <PID_lite.h>

#include <Wire.h>
#include <Adafruit_ADS1015.h>

//#include <long_sat.h>

#define PRESPIN A0
#define OUTPIN 9
#define INTERVAL 250
#define NOAVG   5
#define AVERAGING_STEP 20

int index = 0;
int trick = 125;

long input,output,target;
float KI = 0;
float KP = 0.06;
float KD = 0;

PID_lite myPID(&input,&output,&target, KP,KI,KD,15);
Adafruit_ADS1115 myADC(0x48);


long timer;
const long interval = 500;

void setup()
{

  pinMode(3,INPUT);
  digitalWrite(3,LOW);
  TCCR1B = TCCR1B & 0b11111000 | 0x01;
  TCCR2B = TCCR2B & 0b11111000 | 0x01;
  Serial.begin(9600);
  Serial.println(myPID.getKP());
  Serial.println(myPID.getKI());
  pinMode(OUTPIN, OUTPUT);
  myADC.begin(); 
  target = 750*26;
  myPID.activate();
  myPID.setSaturation(-255,0);
  //  analogWrite(9,125);
}

void loop()
{

  input = myADC.readADC_SingleEnded(1);
  if(myPID.compute(millis()))
  {
    //  Serial.println("computed");
    //  Serial.println(input);
    //   Serial.print(",");
    //   Serial.print(output);
    //    Serial.print(",");
    //    Serial.print(target);
    analogWrite(OUTPIN, -output);
    //analogWrite(OUTPIN, 200);  
  }

  if(timer < millis())
  {
    //Serial.print(analogRead(A0));
    // Serial.print(",");
    Serial.println(-output);
    timer = interval + millis();
  }

  if(Serial.available())
  {
    char input = Serial.read();
    switch(input)
    {
    case 'a':

      KP += 0.005;
      myPID.setParameters(KP,KI,KD);
      Serial.println(KP,4);
      break;
    case 'b':

      KP -= 0.005;
      myPID.setParameters(KP,KI,KD);
      Serial.println(KP,4);
      break;
    case 'c':

      KI += 0.0005;
      myPID.setParameters(KP,KI,KD);
      Serial.println(KI,4);
      break;
    case 'd':

      KI -= 0.0005;
      myPID.setParameters(KP,KI,KD);
      Serial.println(KI,4);
      break;

    case 'e':
      KD += 0.0005;
      myPID.setParameters(KP,KI,KD);
      // analogWrite(9,trick);
      Serial.println(KD,4);

      break;

    case 'f':
      KD -= 0.0005;
      myPID.setParameters(KP,KI,KD);
      // analogWrite(9,trick);
      Serial.println(KD,4);

    case 'g':
      trick=0;
      //  analogWrite(9,trick);
      Serial.println(trick);
      break;

    case 'h':

      analogWrite(OUTPIN,0);
      myPID.deactivate();
      break;

    case 'i':
      myPID.activate();
      break;

    case 'j':
      analogWrite(OUTPIN, 255);
      break;


    default:
      Serial.print(KP,4);
      Serial.print(",");
      Serial.print(KI,4);
      Serial.print(",");
      Serial.print(KD,4);
      Serial.print(",");
      Serial.println(trick);

    }  
  }

}























